openapi: 3.0.1
paths:
  /:
    put:
      responses:
        200:
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToNewCodespaceStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: |-
            arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "name": "$context.requestId",
                "stateMachineArn": "${NewCodespaceStateMachine}"
              }
    get:
      responses:
        200:
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToCodespaceDetailsStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: |-
            arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"queryParams\":{#foreach($param in $input.params().querystring.keySet())\"$param\":\"$util.escapeJavaScript($input.params().querystring.get($param))\"#if($foreach.hasNext),#end#end}}",
                "name": "$context.requestId",
                "stateMachineArn": "${CodespaceDetailsStateMachine}"
              }
    post:
      responses:
        200:
          description: OK response
        400:
          description: Bad Request response
        404:
          description: Not Found response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToCreateComposableStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: |-
            arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          .*error.*400.*:
            statusCode: 400
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
          .*\\"error\\":\s*\\"404.*:
            statusCode: 404
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"body\":$util.escapeJavaScript($input.body)}",
                "name": "$context.requestId",
                "stateMachineArn": "${CreateComposableStateMachine}"
              }

