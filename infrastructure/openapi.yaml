openapi: 3.0.1
paths:
  /auth/login:
    post:
      responses:
        '200':
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToLoginStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"body\":$util.escapeJavaScript($input.body)}",
                "name": "$context.requestId",
                "stateMachineArn": "${LoginStateMachine}"
              }
  /auth/signup:
    post:
      responses:
        '200':
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToSignupStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"body\":$util.escapeJavaScript($input.body)}",
                "name": "$context.requestId",
                "stateMachineArn": "${SignupStateMachine}"
              }
  /:
    put:
      responses:
        '200':
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToNewCodespaceStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"headers\":{#foreach($headerParam in $input.params().header.keySet())\"$headerParam\":\"$util.escapeJavaScript($input.params($headerParam))\"#if($foreach.hasNext),#end#end}}",
                "name": "$context.requestId",
                "stateMachineArn": "${NewCodespaceStateMachine}"
              }
    get:
      responses:
        '200':
          description: default OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToCodespaceDetailsStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"queryParams\":{#foreach($param in $input.params().querystring.keySet())\"$param\":\"$util.escapeJavaScript($input.params().querystring.get($param))\"#if($foreach.hasNext),#end#end},\"headers\":{#foreach($headerParam in $input.params().header.keySet())\"$headerParam\":\"$util.escapeJavaScript($input.params($headerParam))\"#if($foreach.hasNext),#end#end}}",
                "name": "$context.requestId",
                "stateMachineArn": "${CodespaceDetailsStateMachine}"
              }
    post:
      responses:
        '200':
          description: OK response
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt:
            - ApiToCreateComposableStateMachineRole
            - Arn
        httpMethod: POST
        type: aws
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
        requestTemplates:
          application/json:
            Fn::Sub: |-
              {
                "input": "{\"body\":$util.escapeJavaScript($input.body),\"headers\":{#foreach($headerParam in $input.params().header.keySet())\"$headerParam\":\"$util.escapeJavaScript($input.params($headerParam))\"#if($foreach.hasNext),#end#end}}",
                "name": "$context.requestId",
                "stateMachineArn": "${CreateComposableStateMachine}"
              }